(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{327:function(a,t,r){"use strict";r.r(t);var e=r(24),s=Object(e.a)({},function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"java基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java基础","aria-hidden":"true"}},[a._v("#")]),a._v(" Java基础")]),a._v(" "),r("h2",{attrs:{id:"java-介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java-介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" Java 介绍")]),a._v(" "),r("p",[a._v("Java是一门"),r("strong",[a._v("面向对象")]),a._v("编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。")]),a._v(" "),r("p",[r("a",{attrs:{href:""}},[r("strong",[a._v("了解一下")])])]),a._v(" "),r("h2",{attrs:{id:"java-多线程与并发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java-多线程与并发","aria-hidden":"true"}},[a._v("#")]),a._v(" Java 多线程与并发")]),a._v(" "),r("p",[a._v("在一个进程内部又可以执行多个任务，而这每一个任务我们就可以看成是一个线程。线程是程序使用CPU的基本单位。注意：线程是依赖于进程存在的。\nJava对多线程的支持是非常强大的，它屏蔽掉了许多的技术细节，让我们可以轻松的开发多线程的应用程序。")]),a._v(" "),r("p",[r("router-link",{attrs:{to:"/thread/"}},[r("strong",[a._v("了解一下")])])],1)])},[],!1,null,null,null);t.default=s.exports}}]);